library IEEE;
 use IEEE.std_logic_1164.all;
 entity FULL_ADDER is
 port (
 A: in std_logic;
 B: in std_logic;
 Input: in std_logic;
 result: out std_logic;
 output: out std_logic
 );
 end FULL_ADDER;

 architecture lab2 of FULL_ADDER is
 begin
 result <= A xor B xor Input;
 output <= (A and B) or (A and Input) or (B and Input);
 end lab2;

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity 4_BIT_COMPARATOR is
port(    n1 : in std_logic_vector(3 downto 0);
         n2 :      in std_logic_vector(3 downto 0);
         RGB1_Red :              out std_logic;
         RGB1_Blue :          out std_logic;
         RGB1_Green :   out std_logic
);
end 4_BIT_COMPARATOR;

architecture Behavioral of 4_BIT_COMPARATOR is

begin

RGB1_Green <= '1' when n1 > n2;

RGB1_Red <= '1' when n1 < n2;

RGB1_Blue <= '1'when n1 = n2;

end Behavioral;
